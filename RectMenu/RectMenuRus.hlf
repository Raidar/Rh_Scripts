.Language=Russian,Russian (Русский)
.PluginContents=Прямоугольное меню
.Options TabSize=4
.Options CtrlColorChar=\
.Options CtrlStartPosChar=¦

@Contents
$ #Прямоугольное меню# (RectMenu)
  RectMenu — утилита формирования меню для "LuaFAR для Редактора".
 Утилита позволяет выводить меню в несколько строк и столбцов.

  Параметры функции вывода меню аналогичны параметрам функции far.Menu().
 Дополнительные свойства задаются следующим образом:
  — ¦Свойства всего меню — как поля таблицы RectMenu параметра Properties.
  — ¦Свойства отдельных пунктов — как поля таблицы RectMenu пункта меню.

    ~Свойства меню~@RM_Props@
      ~Свойства всего меню~@RM_Props_MenuWhole@
      ~Свойства окна меню~@RM_Props_MenuWindow@
      ~Свойства обработки меню~@RM_Props_MenuHandle@
      ~Свойства пунктов меню~@RM_Props_MenuItems@
      ~Свойства отдельного пункта~@RM_Props_ItemPart@
    ~События меню~@RM_Events@

    ~Подробности о меню~@RM_Details@
      ~Алгоритм работы~@RM_Algorithm@
      ~Использование макросов~@RM_Macros@
      ~Файлы утилиты~@RM_Files@
      ~Функциональные ограничения~@RM_Limits@

 ~Содержание~@Contents@

@Help
 ~RectMenu~@Contents@

@RM_Details
$ #Подробности о меню#: RectMenu
  RectMenu реализован на основе диалога с пользовательским элементом.
 Поэтому он имеет ряд особенностей и ограничений функционирования.
 Некоторые из них приведены в указанных ниже темах.

   ~Алгоритм работы~@RM_Algorithm@
   ~Использование макросов~@RM_Macros@
   ~Файлы утилиты~@RM_Files@
   ~Функциональные ограничения~@RM_Limits@

 ~Содержание~@Contents@

@RM_Algorithm
$ #Алгоритм работы#: RectMenu
  #Основные этапы алгоритма#:
  1. Конфигурирование RectMenu.
    1. Управление настройками.
    2. Формирование диалога.
    3. Управление меню.
    4. Использование диалога.
  2. Управление диалогом.
    1. Рисование меню в диалоге.
    2. Обработка реакции меню.

  Этапы вписаны в комментарии в виде
 \37--[[ <Полный номер этапа> <Название без точки> ]]\-
  Более мелкие блоки закомментированы в виде однострочных
комментариев на отдельных строках (они заканчиваются точкой).
Дополнительные пояснения вписываются в конце операторов (они уже без точки).

 ~Содержание~@Contents@     ~Подробности о меню~@RM_Details@

@RM_Macros
$ #Использование макросов#: RectMenu
  Клавиши в меню RectMenu не работают, если на них назначены
макросы, задаваемые в общей области действия (\37Common\-).
  Клавиши макросов в области действия диалогов (\37Dialog\-) работают,
если в них учесть, что меню RectMenu — это пользовательский элемент
в окне диалога. Поэтому в макросах нужна проверка типа элемента диалога.

    \1FСхема проверки:\-
  \3Flocal\37 F = far.Flags\-
  ...
  \3Fif\37 Dlg.ItemType != F.DI_USERCONTROL \3Fthen\-
    <Действия>
  \3Felse\-
    \37Keys"AKey"\-
  \3Fend\-

 ~Содержание~@Contents@     ~Подробности о меню~@RM_Details@

@RM_Files
$ #Файлы утилиты#: RectMenu
  Основные файлы:
    \37RectMenu.lua\-   — ¦RectMenu: Реализация.
    \37RectDraw.lua\-   — ¦RectMenu: Рисование меню.

 ~Содержание~@Contents@     ~Подробности о меню~@RM_Details@

@RM_Limits
$ #Функциональные ограничения#: RectMenu
  В утилите "Прямоугольное меню" пока не реализованы следующие возможности:
  — ¦Вывод разделителей между пунктами меню для удобства просмотра меню.

  Особенности утилиты (в частности, отличия от far.Menu):
  — ¦Нет соединения пунктов-разделителей с рамкой меню.

 ~Содержание~@Contents@     ~Подробности о меню~@RM_Details@

@RM_Props
$ #Свойства меню#: RectMenu
  Меню RectMenu имеет много свойств, позволяющих задать
 представление и использование меню и его отдельных пунктов.

    ~Свойства всего меню~@RM_Props_MenuWhole@
    ~Свойства окна меню~@RM_Props_MenuWindow@
    ~Свойства рисования меню~@RM_Props_MenuDraw@
    ~Свойства обработки меню~@RM_Props_MenuHandle@
    ~Свойства пунктов меню~@RM_Props_MenuItems@
    ~Свойства отдельного пункта~@RM_Props_ItemPart@

 ~Содержание~@Contents@

@RM_Props_MenuWhole
$ #Свойства всего меню#: RectMenu
  #Shape# (string) — Форма меню:
  — ¦Определяет удлинённость меню по горизонтали или вертикали
при расчёте незаданного количества строк и/или столбцов меню.
  — ¦\37"H"\- — горизонтальная, \37"V"\- — вертикальная (по умолчанию).

  #Order# (string) — Порядок вывода:
  — ¦Задаёт вывод пунктов меню по строкам или столбцам.
  — ¦\37"H"\- — горизонтально (по умолчанию), \37"V"\- — вертикально.

  #Separators# (string) — Наличие разделителей:
  — ¦Позволяет вывести разделители между пунктами меню.
  — ¦По умолчанию — \37""\- (нет разделителей).
  — ¦\37"H"\- — горизонтальные, \37"V"\- — вертикальные, \37"HV"\- — оба типа.

  #Rows# и #Cols# (number) — Размер меню (количество строк и столбцов):
  — ¦Если не заданы оба поля, размер вычисляется так, чтобы получить
однострочное или одностолбцовое меню в зависимости от его формы.
  — ¦Если задано хотя бы одно из полей и оно равно нулю,
размер вычисляется так, чтобы приближённо получить квадрат,
удлинённый по горизонтали или вертикали в зависимости от формы.
  — ¦Если задано только одно из полей, значение второго поля
рассчитывается так, чтобы включить в меню все пункты.
  — ¦Если заданы оба поля, одно из них считается заданным,
а значение второго рассчитывается согласно предыдущему условию.
Выбор заданного поля зависит от формы меню.

  #Fixed# (table) — Информация о фиксированных строках и столбцах.
  — ¦Определяет число непрокручиваемых строк и столбцов меню:
    — #HeadRows# — ¦число строк сверху.
    — #FootRows# — ¦число строк снизу.
    — #HeadCols# — ¦число столбцов слева.
    — #FootCols# — ¦число столбцов справа.

  #ReuseProps# (bool) — Переиспользование свойств меню.
  — ¦Позволяет использовать непосредственно сами свойства меню (без обёртки).

 ~Содержание~@Contents@     ~Свойства меню~@RM_Props@

@RM_Props_MenuWindow
$ #Свойства окна меню#: RectMenu
  #Position# (table) — Позиция левого верхнего угла окна меню.
  — ¦Формат: \37{ x = \-<number>\37, y = \-<number> \37}\-
  — ¦По умолчанию используется центрирование окна: \37{ x = -1, y = -1 }\-.

  #MinWidth# и #MinHeight#,
  #MaxWidth# и #MaxHeight# (number) — Ограничения на область вывода меню:
  — ¦По умолчанию используются следующие значения для поля окна:
      мин. ширина = \37(MinWidth  или 10)\- символов,
      мин. высота = \37(MinHeight или  5)\- символов,
      макс. ширина = \37(MaxWidth  или 80)\- символов,
      макс. высота = \37(MaxHeight или 25)\- символов.

  #Colors#      (table) — Таблица цветов меню для обычных пунктов.
  #FixedColors# (table) — Таблица цветов меню для фиксированных пунктов.
  — ¦Позволяют задать цвета, используемые для вывода RectMenu.

  #MenuOnly# (bool) — Вывод только меню: без рамки, отступа и надписей.
  — ¦Позволяет использовать RectMenu для создания простого списка пунктов.

  #Shadowed# (bool) — Вывод тени окна меню.
  — ¦Управляет отображением тени окна меню.
  — ¦По умолчанию — \37true\-.
  — ¦Если #MenuOnly# \37== true\-, он равен \37false\-.

  #MenuEdge# (number) — Отступ меню от края окна.
  — ¦Определяет пустое пространство между меню и окном.
  — ¦Задаёт величину отступа по горизонтали без учёта стороны рамки.
  — ¦Величина отступа по вертикали примерно равна половине этой величины.
  — ¦По умолчанию — \372\-.
  — ¦Если #MenuOnly# \37== true\-, он равен \370\-.

  #MenuAlign# (string) — Выравнивание меню внутри окна:
  — ¦По умолчанию — \37"LT"\-.
  — ¦Значения для горизонтали (по приоритету):
    \37"L"\- — слева, \37"R"\- — справа, \37"C"\- — по центру.
  — ¦Значения для вертикали (по приоритету):
    \37"T"\- — сверху, \37"B"\- — снизу, \37"M"\- — по середине.

  #BoxKind# (string) — Тип рамки вокруг меню.
  — ¦Принимаемые значения:
    \37false\- — нет рамки,       \37""\-  — "пустая" рамка,
    \37"S"\-   — одиночная рамка, \37"D"\- — двойная рамка (по умолчанию).

  #BoxScroll# (bool) — Вывод полос прокрутки на рамке меню.
  — ¦Управляет положением полос прокрутки:
      \37true\-  — ¦всегда выводить на рамке.
      \37false\- — ¦выводить не на рамке, а внутри области рамки.
      \37nil\-   — ¦выводить на рамке, если только нет надписей.

 ~Содержание~@Contents@     ~Свойства меню~@RM_Props@

@RM_Props_MenuDraw
$ #Свойства рисования меню#: RectMenu

  #Edges# (table) — Данные для рисования отступов и вывода текста на них.

 ~Содержание~@Contents@     ~Свойства меню~@RM_Props@

@RM_Props_MenuHandle
$ #Свойства обработки меню#: RectMenu
  #AltHotOnly# (bool) — Обработка горячих букв только при нажатом \37Alt\-.
  — ¦Позволяет применять клавиши‑символы без модификаторов для других целей.

 ~Содержание~@Contents@     ~Свойства меню~@RM_Props@

@RM_Props_MenuItems
$ #Свойства пунктов меню#: RectMenu
  #ReuseItems# (bool) — Переиспользование пунктов меню.
  — ¦Позволяет использовать непосредственно сами пункты меню (без обёртки).

  #TextMax# (number) — Максимальная длина текста пункта меню.
  — ¦Используется для создания меню со столбцами одинаковой ширины.

  #LineMax# (number) — Максимальное число строк текста пункта меню.
  — ¦Используется для создания меню со строками одинаковой высоты.

  #ShowChecked# (bool) — Показ метки пунктов меню.
  — ¦Управляет выводом метки пунктов меню:
      \37true\-  — ¦показывать всегда.
      \37false\- — ¦не показывать никогда.
      \37nil\-   — ¦показывать, если только есть отмеченные пункты.

  #ItemPadding# (bool) — Вывод текста с отступами.
  — ¦Позволяет выводить текст пункта с отступами от краёв пункта.

  #SpacingChar#,
  #SeparatorChar#,
  #CheckedChar#,
  #UncheckedChar#,
  #PaddingChar#,
  #PaddingLChar#,
  #PaddingRChar#,
  #TextMark# — см. ~Свойства пункта~@RM_Props_ItemPart@.

 ~Содержание~@Contents@     ~Свойства меню~@RM_Props@

@RM_Props_ItemPart
$ #Свойства пункта#: RectMenu
  #Hint# (string) — Текст подсказки для пункта меню.
  — ¦Выводится в "статусной строке" меню (ниже меню).
  — ¦Выводится при наличии отступа меню (см. ~MenuOnly и MenuEdge~@RM_Props_MenuWindow@).

  #SpacingChar# (string) — Символ, используемый для пустого места.
  — ¦Позволяет задать общий символ для заполнения пустого пространства.

  #SeparatorChar# (string) — Символ, используемый для пункта‑разделителя.
  — ¦Позволяет задать общий символ для заполнения области пункта‑разделителя.

  #CheckedChar# (string) — Символ, используемый при отмеченном пункте.
  — ¦Позволяет задать общий символ метки для отмеченного пункта.

  #UncheckedChar# (string) — Символ, используемый при неотмеченном пункте.
  — ¦Позволяет задать общий символ не‑метки для неотмеченного пункта.

  #PaddingChar# (string) — Символ для отступа текста от края пункта.

  #PaddingLChar# (string) — Символ для отступа текста от левого края пункта.

  #PaddingRChar# (string) — Символ для отступа текста от правого края пункта.

  #TextMark# (table) — Выделение части текста пунктов меню.
  — ¦Формат:
    \37{ \-<Шаблон поиска>\37, \-<Начальная позиция>\37, \-<Флаг обычного поиска> \37}\-
    или
    \37{ \-<Начальная позиция выделения>\37, \-<Конечная позиция выделения> \37}\-.

 ~Содержание~@Contents@     ~Свойства меню~@RM_Props@

@RM_Events
$ #События меню#: RectMenu
  Меню RectMenu имеет ряд свойств, позволяющих
 задать собственную реакцию меню на некоторые события.

  ~OnKeyPress~@RM_Event_KeyPress@   — событие нажатия клавиши.
  ~OnChooseItem~@RM_Event_ChooseItem@ — событие выбора пункта.

 ~Содержание~@Contents@

@RM_Event_KeyPress
$ Событие #OnKeyPress#: RectMenu
  Событие возникает, если RectMenu не выполняет никаких своих действий
при нажатии на клавишу. RectMenu сам обрабатывает \37F1\-, \37Esc\-, \37Enter\-,
клавиши‑стрелки (также вместе с \37Ctrl\-; при наличии выделенного пункта),
клавиши горячих букв (см. также свойство ~AltHotOnly~@RM_Props_MenuHandle@),
клавиши быстрого доступа (свойство \37AccelKey\- пунктов меню)
и клавиши‑прерыватели (третий параметр \37BreakKeys\- функции вывода меню).

  Объявление:
    \37OnKeyPress (FarKey, SelectIndex)\-

  Параметры:
    \37FarKey\-      (number) — ¦клавиша, нажатая в меню.
    \37SelectIndex\- (number) — ¦индекс текущего пункта.

  Результат:
    \37Table\- (table) — ¦таблица-массив параметров функции вывода меню:
          \37{ Properties, Items, BreakKeys }\- — для обновления меню.
       (no table) — ¦результат, передаваемый в обработчик окна меню:
            \37false\- — ¦если не нужно никаких изменений окна меню.
            \37nil\-   — ¦для вызова внутреннего обработчика окна меню.
    \37Flags\- (table) — ¦таблица-запись флагов специальной обработки:
          \37isCancel\-    — ¦закрытие окна меню как при отмене.
          \37isClose\-     — ¦закрытие окна меню как при выборе пункта.
          \37isRedraw\-    — ¦перерисовка окна меню.
          \37isRedrawAll\- — ¦перерисовка всех окон FAR.

 ~Содержание~@Contents@     ~События меню~@RM_Events@

@RM_Event_ChooseItem
$ Событие #OnChooseItem#: RectMenu
  Событие возникает, если пользователь выбрал пункт меню или нажал
одну из "быстрых" клавиш (горячих букв, быстрого доступа, прерывателей).

  Объявление:
    \37OnChooseItem (ChooseKind, ChooseIndex, SelectIndex)\-

  Параметры:
    \37ChooseKind\-  (number) — вид выбора пункта/клавиши:
      "DblClick" — ¦выбор пункта с помощью двойного щелчка мыши.
      "Enter"    — ¦выбор пункта по клавише \37Enter\-/\37NumEnter\-.
      "AKey"     — ¦выбор пункта по его \37AccelKey\-.
      "HKey"     — ¦выбор пункта по его горячей букве.
      "BKey"     — ¦выбор клавиши по его \37BreakKey\- в \37BreakKeys\-.
      "FKey"     — ¦выбор клавиши по его \37AccelKey\- в \37BreakKeys\-.
    \37ChooseIndex\- (number) — индекс пункта/клавиши.
    \37SelectIndex\- (number) — индекс текущего пункта.

 ~Содержание~@Contents@     ~События меню~@RM_Events@
